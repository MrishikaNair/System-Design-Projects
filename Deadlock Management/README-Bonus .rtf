{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww15580\viewh10840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Assignment 5 - Bonus\
\
Part 1\
\
This was the default problem of dining philosophers where we have 5 plates and 5 forks.\
I initialised a semaphore then created a threads consisting of philosopher id\'92s which would run simultaneously. There is a check function where a philosopher if hungry and his neighbours are not eating the philosopher would be set to an eating state, but before that take fork() function is called to understand which fork is free at the current moment, then the put fork function is called to set another fork free. \
\
Part 2\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 In this version of dining philosophers where we have 5 plates and 5 forks and 4 bowls, the philosopher eats with one fork. Starts with initialisation of a semaphore then created threads consisting of philosopher id\'92s which would run simultaneously. In the check function where a philosopher if hungry and his neighbours are not eating the philosopher would be set to an eating state, but before that take fork() and take_bowl() functions are called to understand which fork and which bowl is free at the current moment, then the put_fork(), and put_bowl() function is called to set another fork and bowl free. \
\
Part 3\
\
In this version of dining philosophers where we have 5 plates and 5 forks and 4 bowls, the philosopher eats with 2 forks. Starts with initialisation of a semaphore then created threads consisting of philosopher id\'92s which would run simultaneously. In the check function where a philosopher if hungry and his neighbours are not eating the philosopher would be set to an eating state, but before that take fork() and take_bowl() functions are called to understand which fork and which bowl is free at the current moment, then the put_fork(), and put_bowl() function is called to set another fork and bowl free. }